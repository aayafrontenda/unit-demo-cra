name: Release

on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Update CHANGELOG
        id: changelog
        uses: requarks/changelog-action@v1
        with:
          token: ${{ github.token }}
          tag: ${{ github.ref_name }}
          excludeTypes: doc

      - name: Create Release
        uses: ncipollo/release-action@v1.12.0
        with:
          allowUpdates: true
          draft: false
          makeLatest: true
          name: ${{ github.ref_name }}
          body: ${{ steps.changelog.outputs.changes }}
          token: ${{ github.token }}

      - name: Check if Issue Exists
        uses: nickderobertis/check-if-issue-exists-action@master
        id: check_if_issue_exists
        with:
          repo: aayafrontenda/unit-demo-cra
          token: ${{ secrets.GITHUB_TOKEN }}
          title: RELEASE ${{ github.ref_name }}
      - name: Create Issue From File
        if: steps.check_if_issue_exists.outputs.exists == 'false'
        uses: peter-evans/create-issue-from-file@v4
        with:
          title: RELEASE ${{ github.ref_name }}
          content-filepath: ./CHANGELOG.md
          labels: |
            report
            automated issue
            ${{ github.ref_name }}

      - name: Search and Edit Issue
        id: edit
        if: steps.check_if_issue_exists.outputs.exists == 'true'
        uses: lee-dohm/select-matching-issues@v1
        with:
          query: "label:${{ github.ref_name }}"
          token: ${{ github.token }}
      - name: Edit Issue
        run: cat ${{ steps.edit.outputs.path }} | xargs gh issue edit --body-file CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 18
      - run: git checkout -b release/${{ github.ref_name }}
      - run: npm ci
      - run: npx playwright install
      - run: npm run e2e
      - run: npm test
      - run: git push origin release/${{ github.ref_name }}
      - run: npm run build
      - name: Deploy to GH Pages ðŸš€
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: build
      - name: Close Issue
        id: close
        uses: lee-dohm/select-matching-issues@v1
        with:
          query: "label:${{github.ref_name}}"
          token: ${{ github.token }}
      - name: Close Issue with Label ${{ github.ref_name }}
        run: cat ${{ steps.close.outputs.path }} | xargs gh issue close
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
